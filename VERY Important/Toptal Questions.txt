codility

you are given a string s consisting of letters 'a' and 'b'. you want to split it into three separate non empty sets
In how many ways can you split S into three parts, such that each part contains the same number of letter a

Project Euler #1

sum of all 3 multiples and 5 multiples below 1000
999/3 = 333
999/5 = 138
Common LCM => 5*3 = 15 will be counted twice, so minus it

Sigma 1 to 333 3k1 + Sigma 1 to 138  5k2 - Sigma 1 to 66 15k3

Where k = n(n+2)/2


========================================================================================================================
This is a demo task.

Write a function:

class Solution { public int solution(int[] A); }

that, given an array A of N integers, returns the smallest positive integer (greater than 0) that does not occur in A.

For example, given A = [1, 3, 6, 4, 1, 2], the function should return 5.

Given A = [1, 2, 3], the function should return 4.

Given A = [−1, −3], the function should return 1.

Write an efficient algorithm for the following assumptions:

N is an integer within the range [1..100,000];
each element of array A is an integer within the range [−1,000,000..1,000,000].
